{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ml3-platform-sdk","text":"<p>ML3 platform client SDK</p>"},{"location":"client/","title":"Client","text":""},{"location":"client/#ml3platformclient","title":"ML3PlatformClient","text":"<pre><code>ML3PlatformClient(\n   url: str, user_id: str, api_key: str\n)\n</code></pre> <p>Client for interacting with ML3Platform APIs</p> <p>Methods:</p>"},{"location":"client/#create_company","title":".create_company","text":"<pre><code>.create_company(\n   name: str, address: str, vat: str\n)\n</code></pre> <p>Create a company</p> <p>Args</p> <ul> <li>name  : the name of the company</li> <li>address  : the address of the company</li> <li>vat  : the vat of the company</li> </ul> <p>Returns</p> <p>the company id associated with the new company (string)</p>"},{"location":"client/#create_project","title":".create_project","text":"<pre><code>.create_project(\n   name: str, company_id: str\n)\n</code></pre> <p>Create a project</p> <p>Args</p> <ul> <li>name  : the name of the project</li> <li>company_id  : the identifier of the company that owns the project</li> </ul> <p>Returns</p> <p>the project id associated with the created project (string)</p>"},{"location":"client/#show_projects","title":".show_projects","text":"<pre><code>.show_projects()\n</code></pre> <p>Show a list all projects</p> <p>Example output:</p> <pre><code>Project ID                Name\n------------------------  ----------\n6475f8c9ebac5081e529s63f  my project\n</code></pre>"},{"location":"client/#create_task","title":".create_task","text":"<pre><code>.create_task(\n   project_id: str, name: str, tags: List[str], task_type: TaskType\n)\n</code></pre> <p>Create a task</p> <p>Args</p> <ul> <li>project_id  : the identifier of the project that includes the task</li> <li>name  : the name of the task</li> <li>tags  : a list of tags associated with the task</li> <li>task_type  : the type of the task</li> </ul> <p>Returns</p> <p>the task id associated with the created task (string)</p>"},{"location":"client/#show_tasks","title":".show_tasks","text":"<pre><code>.show_tasks(\n   project_id: str\n)\n</code></pre> <p>Show a list of tasks included in a project</p> <p>Args</p> <ul> <li>project_id  : the identifier of a project</li> </ul> <p>Example output:</p> <pre><code>Task ID                   Name     Type            Status     Status start date\n------------------------  -------  --------------  --------   -----------------\n6476040d583201813ab4539a  my task  classification  OK         03-02-2023 10:14:06\n</code></pre>"},{"location":"client/#add_data_schema","title":".add_data_schema","text":"<pre><code>.add_data_schema(\n   task_id: str, data_schema: Dict[str, List[dict]]\n)\n</code></pre> <p>Associate a data schema to a task</p> <p>Args</p> <ul> <li>task_id  : the identifier of the task</li> <li>data_schema  : the data schema that characterize your task</li> </ul>"},{"location":"client/#show_data_schema","title":".show_data_schema","text":"<pre><code>.show_data_schema(\n   task_id: str\n)\n</code></pre> <p>Show data schema of associated with a task</p> <p>Example output:</p> <pre><code>Column name       Role     Type      Nullable\n----------------  -------  --------  ----------\nsample_id         id       string    False\ntimestamp         time_id  string    False\nsepallength       input    float     False\nsepalwidth        input    float     False\npetallength       input    float     False\npetalwidth        input    float     False\nclass             target   category  False\n</code></pre>"},{"location":"client/#update_data_schema","title":".update_data_schema","text":"<pre><code>.update_data_schema(\n   task_id: str, data_schema: Dict[str, List[dict]]\n)\n</code></pre> <p>Update an existing data schema</p> <p>Args</p> <ul> <li>task_id  : the identifier of the task</li> <li>data_schema  : the set of new columns that should be added to the data schema</li> </ul>"},{"location":"client/#add_historical_data","title":".add_historical_data","text":"<pre><code>.add_historical_data(\n   task_id: str, data_path: str\n)\n</code></pre> <p>Add a batch of historical data</p> <p>Args</p> <ul> <li>task_id  : the identifier of the task</li> <li>data_path  : path to the csv file containing the historical data</li> </ul>"},{"location":"client/#create_model","title":".create_model","text":"<pre><code>.create_model(\n   project_id: str, task_id: str, name: str, version: str\n)\n</code></pre> <p>Create a model.</p> <p>Args</p> <ul> <li>project_id  : the identifier of the project</li> <li>task_id  : the identifier of the task</li> <li>name  : the name of the model</li> <li>version  : the current version of the model</li> </ul> <p>Returns</p> <p>the model id associated with the created model (string)</p>"},{"location":"client/#show_models","title":".show_models","text":"<pre><code>.show_models(\n   task_id: str\n)\n</code></pre> <p>Show a list of models included in a task.</p> <p>Args</p> <ul> <li>task_id  : the identifier of the task</li> </ul> <p>Example output:</p> <pre><code>Model ID                  Name        Version    Status     Status start date\n------------------------  ----------  ---------  --------   -----------------\n64760430583201813ab4ad1e  model_name  v1.0       OK         03-02-2023 10:14:06\n</code></pre>"},{"location":"client/#add_model_reference","title":".add_model_reference","text":"<pre><code>.add_model_reference(\n   project_id: str, task_id: str, model_id: str, data_path: str\n)\n</code></pre> <p>Add a batch of reference data associated with a given model</p> <p>Args</p> <ul> <li>project_id  : the identifier of the project</li> <li>task_id  : the identifier of the task</li> <li>model_id  : the identifier of the model</li> <li>data_path  : path to the csv file containing the reference data</li> </ul>"},{"location":"client/#add_production_data","title":".add_production_data","text":"<pre><code>.add_production_data(\n   task_id: str, data_path: str\n)\n</code></pre> <p>Add a batch of production data associated with a given task</p> <p>Args</p> <ul> <li>task_id  : the identifier of the task</li> <li>data_path  : path to the csv file containing the production data</li> </ul>"},{"location":"client/#get_importance_weights","title":".get_importance_weights","text":"<pre><code>.get_importance_weights(\n   task_id: str, model_id: str, model_version: str,\n   retrain_event_id: Optional[str] = None\n)\n</code></pre> <p>For a given model version, get the importance weights with the possibility to specify a retrain_event_id.</p> <p>Args</p> <ul> <li>task_id  : the identifier of the task</li> <li>model_id  : the identifier of the task</li> <li>model_version  : the version of the model</li> <li>retrain_event_id  : An optional retrain event may be provided. If <code>None</code>, the weights will be computed based on the distribution of the last concept.</li> </ul>"},{"location":"client/#show_running_operations","title":".show_running_operations","text":"<pre><code>.show_running_operations(\n   task_id: str\n)\n</code></pre> <p>This method shows a list of  all running operations related to a given task</p> <p>Args</p> <ul> <li>task_id  : the identifier of the task</li> </ul> <p>Example output:</p> <pre><code>Operation             Status\n--------------------  --------\nadd_model_reference   running\n</code></pre>"}]}